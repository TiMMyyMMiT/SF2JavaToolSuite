name: Dependency-Aware Build

on:
  push:
    branches: [main]
    paths:
      - '**/version.properties'
  pull_request:
    branches: [main]
    paths:
      - '**/version.properties'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4.7.1
        with:
          distribution: temurin
          java-version: 17
    
      - name: Download and install Apache Ant 1.10.14
        run: |
          wget https://downloads.apache.org/ant/binaries/apache-ant-1.10.14-bin.tar.gz
          tar -xzf apache-ant-1.10.14-bin.tar.gz
          sudo mv apache-ant-1.10.14 /opt/ant
          echo "ANT_HOME=/opt/ant" >> $GITHUB_ENV
          echo "/opt/ant/bin" >> $GITHUB_PATH

      - name: Detect changed projects
        id: project-graph
        shell: bash
        run: |
          git fetch origin ${{ github.event.before }}

          # Find changed version.properties files
          changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep 'version.properties' || true)

          echo "Changed files:"
          echo "$changed_files"

          changed_projects=()
          for file in $changed_files; do
            project=$(dirname "$file")
            changed_projects+=("$(basename "$project")")
          done

          echo "Changed projects: ${changed_projects[@]}"

          # Export changed projects to environment
          echo "CHANGED_PROJECTS=${changed_projects[*]}" >> $GITHUB_ENV

      - name: Build projects
        shell: bash
        run: |
          echo "Starting build process..."

          mkdir -p built-jars

          read -a CHANGED_PROJECTS <<< "$CHANGED_PROJECTS"
          
          # Build changed apps
          echo "Build changed projects"
          for proj in "${CHANGED_PROJECTS[@]}"; do
              echo "Building project $proj..."

              mkdir -p "$proj/build/classes"
              mkdir -p "$proj/dist/lib"
              mkdir -p "$proj/lib"

              ant -v -f "$proj" -Dplatforms.JDK_17.home="$JAVA_HOME" package-for-store

              jar_name=$(basename "$proj")
              if [ -f "$proj/store/${jar_name}.jar" ]; then
                cp "$proj/store/${jar_name}.jar" "built-jars/$jar_name.jar"
              else
                echo "Warning: $proj/store/${jar_name}.jar not found after package-for-store"
              fi
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jars
          path: built-jars/*.jar
